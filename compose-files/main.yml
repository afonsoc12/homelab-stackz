version: '3'

services:

# ==================================================
# Portainer
# ==================================================
    portainer:
        image: portainer/portainer-ce:latest
        container_name: portainer
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ${APPDATA_PATH}/portainer:/data
        ports:
            - 9000:9000
            - 8000:8000
        networks:
            - reverse-proxy
        restart: ${RESTART_POLICY}

# ==================================================
# Pihole
# ==================================================
    pihole:
        image: pihole/pihole:latest
        container_name: pihole
        hostname: pihole
        cap_add:
            - NET_ADMIN
        environment:
            - TZ=${TZ}
            - WEBPASSWORD=${MAIN_PIHOLE_WEBPASSWORD}
            - WEB_PORT=${MAIN_PIHOLE_WEB_PORT}
        volumes:
            - ${APPDATA_PATH}/pihole/config:/etc/pihole
            - ${APPDATA_PATH}/pihole/dns:/etc/dnsmasq.d
#        ports:
            # - 53:53/tcp
            # - 53:53/udp
            # - 67:67/udp
            # - 8880:80/tcp
            # - 8843:443/tcp
        network_mode: host
        #networks:
        #    pihole-macvlan:
        #       ipv4_address: 10.1.1.2
        restart: ${RESTART_POLICY}

# ==================================================
# OpenVPN - Access Server
# ==================================================
    # openvpn-as:
    #     image: linuxserver/openvpn-as:latest
    #     container_name: openvpn-as
    #     hostname: openvpn-as
    #     cap_add:
    #         - NET_ADMIN
    #     environment:
    #         - PUID=${PUID}
    #         - PGID=${PGID}
    #         - TZ=${TZ}
    #         #- INTERFACE=eth0 #optional
    #     volumes:
    #         - ${APPDATA_PATH}/openvpn-as:/config
    #     ports:
    #         - 943:943
    #         - 9443:9443
    #         - 1194:1194/udp
    #     network_mode: bridge
    #     restart: ${RESTART_POLICY}

# ==================================================
# Wireguard
# ==================================================
    wireguard:
        image: linuxserver/wireguard:latest
        container_name: wireguard
        cap_add:
            - NET_ADMIN
            - SYS_MODULE
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
            - SERVERURL=${MAIN_WIREGUARD_SERVER_URL}
            - SERVERPORT=${MAIN_WIREGUARD_SERVERPORT}
            - PEERS=${MAIN_WIREGUARD_PEERS}
            - PEERDNS=${MAIN_WIREGUARD_PEERDNS} #optional
            - INTERNAL_SUBNET=10.13.13.0 #optional
            - ALLOWEDIPS=0.0.0.0/0 #optional
        volumes:
            - ${APPDATA_PATH}/wireguard:/config
            - /lib/modules:/lib/modules
        ports:
            - ${MAIN_WIREGUARD_SERVERPORT}:${MAIN_WIREGUARD_SERVERPORT}/udp
        sysctls:
            - net.ipv4.conf.all.src_valid_mark=1
        networks:
            - reverse-proxy
        restart: ${RESTART_POLICY}


# ==================================================
# Swag
# ==================================================
    swag:
        image: linuxserver/swag:latest
        container_name: swag
        cap_add:
            - net_admin
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
            - URL=${MAIN_SWAG_URL}
            - SUBDOMAINS=${MAIN_SWAG_SUBDOMAINS}
            - VALIDATION=${MAIN_SWAG_VALIDATION}
            - DNSPLUGIN=${MAIN_SWAG_DNSPLUGIN}
            - DHLEVEL=2048
            - ONLY_SUBDOMAINS=${MAIN_SWAG_ONLYSUBDOMAINS}
        volumes:
            - ${APPDATA_PATH}/swag:/config
        ports:
            - 80:80
            - 443:443
        networks: 
            - reverse-proxy
            # - reverse-proxy-overlay
        restart: ${RESTART_POLICY}

# ==================================================
# Authelia
# ==================================================
    authelia:
        image: authelia/authelia:latest
        container_name: authelia
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
        volumes:
            - ${APPDATA_PATH}/authelia:/config
        networks:
            - authelia
            - reverse-proxy
        depends_on:
            - mariadb-authelia
        restart: ${RESTART_POLICY}

    mariadb-authelia:
        image: linuxserver/mariadb:latest
        container_name: mariadb-authelia
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
            - MYSQL_ROOT_PASSWORD=${MAIN_MARIADB_AUTHELIA_ROOT_PASSWORD}
        volumes:
            - ${APPDATA_PATH}/mariadb-authelia:/config
        #ports:
        # No need to forward ports to host since this will only be accessed inter containers
        #    - 3306:3306
        networks:
            - authelia
        restart: ${RESTART_POLICY}

networks:
    # pihole-macvlan:
    #     name: pihole-macvlan
    #     driver: macvlan                       # Use the macvlan network driver
    #     driver_opts:
    #         parent: eth0                    # If open vSwitch is disabled use eth0 (or eth1 +)
    #     ipam:
    #         config:
    #             - subnet: 10.1.1.0/24        # Specify subnet
    #               gateway: 10.1.1.1          # Gateway address
    #               ip_range: 10.1.1.0/27      # Available IP addresses
    #               aux_addresses:
    #                   host: 10.1.1.3

    reverse-proxy:
        name: reverse-proxy
        driver: bridge
        ipam:
            config:
                - subnet: 192.168.144.0/20
    
    # Must be created before
    reverse-proxy-overlay:
        name: reverse-proxy-overlay
        driver: overlay
        ipam:
            config:
                - subnet: 10.11.0.0/16
                
    authelia:
        name: authelia
        driver: bridge
