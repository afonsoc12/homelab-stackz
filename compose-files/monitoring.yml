version: '3.5'

services:

# ==================================================
# Grafana
# ==================================================
    grafana:
        image: grafana/grafana:latest
        container_name: grafana
        user: ${PUID}
        environment:
            - GF_SERVER_ROOT_URL=${MONITORING_GRAFANA_GF_SERVER_ROOT_URL}
            - GF_SERVER_DOMAIN=${MONITORING_GRAFANA_GF_SERVER_ROOT_URL}
        volumes:
            - ${APPDATA_PATH}/grafana:/var/lib/grafana
            - ${APPDATA_PATH}/grafana/grafana.ini:/etc/grafana/grafana.ini:ro
        ports:
            - 3000:3000
        networks:
            - monitoring
            - proxy
        restart: ${RESTART_POLICY}

# ==================================================
# InfluxDB
# ==================================================
    influxdb:
        image: influxdb:1.8.4
        container_name: influxdb
        healthcheck: # Allow influx to start before telegraf
            test: ["CMD", "curl", "-f", "http://influxdb:8086/health"]
            interval: 10s
            timeout: 10s
            retries: 5
            start_period: 5s
        volumes:
            - ${APPDATA_PATH}/influxdb:/var/lib/influxdb
        ports:
            - 8086:8086
        networks:
            - monitoring
        restart: ${RESTART_POLICY}

# ==================================================
# Telegraf
# ==================================================
    telegraf:
        build: ../containers/telegraf
        image: telegraf:latest # Custom image
        container_name: telegraf
        hostname: telegraf
        user: telegraf:${DOCKER_GID}
        depends_on:
            influxdb:
                condition: service_healthy
        environment:
            - HOST_ETC=/hostfs/etc
            - HOST_PROC=/hostfs/proc
            - HOST_SYS=/hostfs/sys
            - HOST_VAR=/hostfs/var
            - HOST_RUN=/hostfs/run
            - HOST_MOUNT_PREFIX=/hostfs
        volumes:
            - ${APPDATA_PATH}/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
            - /:/hostfs:ro \
        networks:
            - monitoring
        restart: ${RESTART_POLICY}

# ==================================================
# Intrusion-monitor
# ==================================================
    intrusion-monitor:
        image: afonsoc12/intrusion-monitor:latest
        container_name: intrusion-monitor
        depends_on:
            influxdb:
                condition: service_healthy
        environment:
            - TZ=${TZ}
            - API_KEY=${MONITORING_INTRUSION_MONITOR_API_KEY}
            - INFLUXDB_HOST=${MONITORING_INTRUSION_MONITOR_INFLUXDB_HOST}
            - INFLUXDB_DATABASE=${MONITORING_INTRUSION_MONITOR_INFLUXDB_DATABASE}
            - INFLUXDB_PORT=${MONITORING_INTRUSION_MONITOR_INFLUXDB_PORT}
            - INFLUXDB_USER=${MONITORING_INTRUSION_MONITOR_INFLUXDB_USER}
            - INFLUXDB_PASSWORD=${MONITORING_INTRUSION_MONITOR_INFLUXDB_PASSWORD}
            - OPERATION_MODE=${MONITORING_INTRUSION_MONITOR_OPERATION_MODE}
            #- SSH_LOG_PATH=
            #- LOG_LEVEL=debug
        volumes:
            - /var/log/ssh-intrusion.log:/watchdog/log/auth.log:ro
        ports:
            - 7007:7007
        networks:
            - monitoring
        restart: ${RESTART_POLICY}

# ==================================================
# Organizr
# ==================================================
    organizr:
        image: organizr/organizr:latest
        container_name: organizr
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - fpm=true #"false" `#optional`
            #- branch="v2-master" `#optional`
        volumes:
            - ${APPDATA_PATH}/organizr:/config
        ports:
            - 3030:80
        networks:
            - proxy
        restart: ${RESTART_POLICY}

# ==================================================
# Heimdall
# ==================================================
    heimdall:
        image: linuxserver/heimdall:latest
        container_name: heimdall
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
        volumes:
            - ${APPDATA_PATH}/heimdall:/config
        ports:
            - 3060:80
            - 3070:443
        networks:
            - proxy
        restart: ${RESTART_POLICY}

# ==================================================
# Homer
# ==================================================
    homer:
        image: b4bz/homer:latest
        container_name: homer
        environment:
            - UID=${PUID}
            - GID=${PGID}
            - TZ=${TZ}
        volumes:
            - ${APPDATA_PATH}/homer:/www/assets
        ports:
            - 8777:8080
        networks:
            - proxy
        restart: ${RESTART_POLICY}

networks:
    monitoring:
        name: monitoring

    proxy:
        # Must have started swag before
        external:
            name: reverse-proxy